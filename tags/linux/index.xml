<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Edwin Kofler</title><link>https://hyperupcall.github.io/blog/tags/linux/</link><description>Recent content in linux on Edwin Kofler</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 08 Jan 2022 00:48:33 -0800</lastBuildDate><atom:link href="https://hyperupcall.github.io/blog/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Terminal Automation with Expect</title><link>https://hyperupcall.github.io/blog/posts/terminal-automation-with-expect/</link><pubDate>Sat, 08 Jan 2022 00:48:33 -0800</pubDate><guid>https://hyperupcall.github.io/blog/posts/terminal-automation-with-expect/</guid><description>Expect is THE tool for automating tasks in the terminal. It is extremely helpful if you need to automate sending input to a program directly on the command line.
This guide is targeted towards developers that wish to automate sending and receiving input from a program, without having to read long manual pages or fragmented StackOverflow answers. I&amp;rsquo;m going to skimp on technical details relating to Expect and the concepts around it; for that, there are plenty of resources online</description></item><item><title>Fixing My Network after expanding the LAN</title><link>https://hyperupcall.github.io/blog/posts/fixing-my-internal-network/</link><pubDate>Thu, 26 Mar 2020 14:07:45 -0700</pubDate><guid>https://hyperupcall.github.io/blog/posts/fixing-my-internal-network/</guid><description>Somewhat recently, I finalized the purchase of some computers and computer parts on Craigslist. I was able to bargain for some cheap discounts - and I wanted to plug these computers into my network. Little did I know that I would be in for a wild ride&amp;hellip;
At the time, my LAN did not consist of much: just an old (but still great!) MacBook Pro 2012, a Raspberry Pi 3B+ and a Surface Pro 5, which is my daily driver.</description></item><item><title>Fiddling with Ubuntu Server Images</title><link>https://hyperupcall.github.io/blog/posts/fiddling-with-ubuntu-server-images/</link><pubDate>Sun, 23 Feb 2020 13:23:00 -0800</pubDate><guid>https://hyperupcall.github.io/blog/posts/fiddling-with-ubuntu-server-images/</guid><description>Oddly enough, the latest version of Ubuntu Server failed to install on my MacBook Pro (2012). It&amp;rsquo;s due to some bug in efibootmgr. Ubuntu Server Installer uses efibootmgr to create some NVRAM variables for the UEFI boot process. Unfortunately, efibootmgr failed right in the middle and printed an empty string to stderr, abruptly ending the installation process.
To fix this, I hypothesized that I could somehow redirect the command&amp;rsquo;s stderr to /dev/null using a file descriptor redirect.</description></item></channel></rss>