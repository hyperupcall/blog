<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Edwin Kofler</title><link>https://hyperupcall.github.io/blog/posts/</link><description>Recent content in Posts on Edwin Kofler</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 08 Jan 2022 00:48:33 -0800</lastBuildDate><atom:link href="https://hyperupcall.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Terminal Automation with Expect</title><link>https://hyperupcall.github.io/blog/posts/terminal-automation-with-expect/</link><pubDate>Sat, 08 Jan 2022 00:48:33 -0800</pubDate><guid>https://hyperupcall.github.io/blog/posts/terminal-automation-with-expect/</guid><description>Expect is THE tool for automating tasks in the terminal. It is extremely helpful if you need to automate sending input to a program directly on the command line.
This guide is targeted towards developers that wish to automate sending and receiving input from a program, without having to read long manual pages or fragmented StackOverflow answers. I&amp;rsquo;m going to skimp on technical details relating to Expect and the concepts around it; for that, there are plenty of resources online</description></item><item><title>Fixing My Network after expanding the LAN</title><link>https://hyperupcall.github.io/blog/posts/fixing-my-internal-network/</link><pubDate>Thu, 26 Mar 2020 14:07:45 -0700</pubDate><guid>https://hyperupcall.github.io/blog/posts/fixing-my-internal-network/</guid><description>Somewhat recently, I finalized the purchase of some computers and computer parts on Craigslist. I was able to bargain for some cheap discounts - and I wanted to plug these computers into my network. Little did I know that I would be in for a wild ride&amp;hellip;
At the time, my LAN did not consist of much: just an old (but still great!) MacBook Pro 2012, a Raspberry Pi 3B+ and a Surface Pro 5, which is my daily driver.</description></item><item><title>Fiddling with Ubuntu Server Images</title><link>https://hyperupcall.github.io/blog/posts/fiddling-with-ubuntu-server-images/</link><pubDate>Sun, 23 Feb 2020 13:23:00 -0800</pubDate><guid>https://hyperupcall.github.io/blog/posts/fiddling-with-ubuntu-server-images/</guid><description>Oddly enough, the latest version of Ubuntu Server failed to install on my MacBook Pro (2012). It&amp;rsquo;s due to some bug in efibootmgr. Ubuntu Server Installer uses efibootmgr to create some NVRAM variables for the UEFI boot process. Unfortunately, efibootmgr failed right in the middle and printed an empty string to stderr, abruptly ending the installation process.
To fix this, I hypothesized that I could somehow redirect the command&amp;rsquo;s stderr to /dev/null using a file descriptor redirect.</description></item><item><title>Frontend Web Development: My First Year</title><link>https://hyperupcall.github.io/blog/posts/front-end-web-dev-a-years-reflection/</link><pubDate>Mon, 17 Jun 2019 00:47:57 -0700</pubDate><guid>https://hyperupcall.github.io/blog/posts/front-end-web-dev-a-years-reflection/</guid><description>So I was reintroduced to programming during the fall of 2017. I was learning Java in my AP Computer Science A class. The class was another one of those &amp;ldquo;college-level&amp;rdquo; &amp;ldquo;advanced placement&amp;rdquo; (AP) classes, which actually became really fun near the end.
You see, I was finishing up a really fun final project (written in Java). It was basically an anagram finder, with a few extra features (including local multiplayer). I had so much fun making it.</description></item><item><title>Developing my Robotics Teams' Website</title><link>https://hyperupcall.github.io/blog/posts/creating-website-for-robotics-club/</link><pubDate>Tue, 14 May 2019 22:58:47 -0700</pubDate><guid>https://hyperupcall.github.io/blog/posts/creating-website-for-robotics-club/</guid><description>During the November of 2018, I became aware of a website competition. I had the opportunity to submit a website that showcased my robotics club by mid-January. Website creation tools (like ones from Wix or Weebly) were not prohibited. After learning this, I thought this competition would be perfect to apply the frontend skills that I recently learned! I knew I probably wasn&amp;rsquo;t going to win, but I wanted to give it my best shot.</description></item><item><title>Fibonacci Equation for Zth (Nth) Term Using Pascal's Triangle (Part 2 of 2)</title><link>https://hyperupcall.github.io/blog/posts/fibonacci-equation-using-pascals-triangle-part-2/</link><pubDate>Thu, 20 Dec 2018 11:41:42 -0800</pubDate><guid>https://hyperupcall.github.io/blog/posts/fibonacci-equation-using-pascals-triangle-part-2/</guid><description>If you&amp;rsquo;re not familiar with Pascal&amp;rsquo;s Triangle, see part 1.
Finding a Formula How do we leverage the relationship (in the image above) to obtain an equation that obtains the $z$th term ($Fib(z)$, or $F(z)$) in the Fibonacci sequence? First, we need to figure out what our equation may look like. We know we&amp;rsquo;re adding up terms of the Fibonacci sequence, so a summation symbol will be used. Additionally, we are adding up terms from Pascal&amp;rsquo;s triangle, where each term individually can be written as $_nC_r$.</description></item><item><title>Fibonacci Equation for Zth (Nth) Term Using Pascal's Triangle (Part 1 of 2)</title><link>https://hyperupcall.github.io/blog/posts/fibonacci-equation-using-pascals-triangle-part-1/</link><pubDate>Fri, 16 Nov 2018 10:10:57 -0800</pubDate><guid>https://hyperupcall.github.io/blog/posts/fibonacci-equation-using-pascals-triangle-part-1/</guid><description>If you&amp;rsquo;re familiar with the intricacies of Pascal&amp;rsquo;s Triangle, see how I did it by going to part 2.
Background of Pascal&amp;rsquo;s Triangle A while back, I was reintroduced to Pascal&amp;rsquo;s Triangle by my pre-calculus teacher. Pascal&amp;rsquo;s triangle can be written as an infintely expanding triangle, with each term being generated as the sum of the two numbers adjacently above it. For example, both $10$s in the triangle below are the sum of $6$ and $4$.</description></item><item><title>Render LaTeX with KaTex in Hugo Blog</title><link>https://hyperupcall.github.io/blog/posts/render-latex-with-katex-in-hugo-blog/</link><pubDate>Sat, 15 Sep 2018 11:26:16 -0700</pubDate><guid>https://hyperupcall.github.io/blog/posts/render-latex-with-katex-in-hugo-blog/</guid><description>NOTICE: This method will NO LONGER WORK on recent version of Hugo. I recommend reading this post for up-to-date instructions.
Just recently, I added support to render LaTeX math equations with the rendering engine KaTeX for this blog. I chose it over MathJax because it performs substantially faster. To integrate KaTeX in my Hugo blog, I used the Mmark Markdown processor rather than Hugo&amp;rsquo;s default Blackfriday processor.
There are three steps to follow so you can write LaTeX in markdown for KaTeX to use.</description></item><item><title>New Blog</title><link>https://hyperupcall.github.io/blog/posts/new-blog/</link><pubDate>Mon, 03 Sep 2018 11:52:21 -0700</pubDate><guid>https://hyperupcall.github.io/blog/posts/new-blog/</guid><description>I decided to create a new blog. I&amp;rsquo;m mostly going to write about my programming projects and some programming topics. The objective of this blog is to increase my understanding of various programming topics, since explaining a topic will yield better conceptual understanding (of that topic).
This blog was created using Hugo, one of the fastest static-site generators. It has speed, wide-support, and great themes.
Overtime, I&amp;rsquo;ll style the blog to my liking and (hopefully) post many high-quality blogs.</description></item></channel></rss>